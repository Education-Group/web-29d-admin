name: Build and Deploy to Alibaba Cloud VPS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r .next deployment/
          cp -r public deployment/
          cp package.json deployment/
          cp package-lock.json deployment/
          cp next.config.ts deployment/
          cp -r app deployment/
          cp -r types deployment/
          cp ecosystem.config.js deployment/
          tar -czf deployment.tar.gz -C deployment .

      - name: Deploy to Alibaba Cloud VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Create application directory if it doesn't exist
            sudo mkdir -p /var/www/web-29d-admin
            sudo chown $USER:$USER /var/www/web-29d-admin

            # Stop the application if it's running with PM2
            pm2 stop web-29d-admin || true

            # Clean existing deployment but keep node_modules
            rm -rf /var/www/web-29d-admin/*

      - name: Copy deployment package to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: 'deployment.tar.gz'
          target: '/var/www/web-29d-admin/'

      - name: Extract and setup application on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd /var/www/web-29d-admin

            # Extract deployment package
            tar -xzf deployment.tar.gz
            rm deployment.tar.gz

            # Set proper permissions
            sudo chown -R $USER:$USER /var/www/web-29d-admin
            sudo chmod -R 755 /var/www/web-29d-admin

            # Copy node_modules from /var/www if it exists
            if [ -d "/var/www/node_modules" ]; then
              echo "Copying node_modules from /var/www..."
              cp -r /var/www/node_modules /var/www/web-29d-admin/
            else
              echo "No node_modules found in /var/www"
            fi

            # Start the application with PM2
            pm2 start ecosystem.config.js
            pm2 save

            # Check application status
            sleep 5
            pm2 status
